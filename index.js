/* 

       vue3   响应系统的原理
          vue3将响应系统脱离了出去
          通过 ref、reactive 可以创建响应式数据

          ref函数 
            首先会判断是否是 ref对象，如果是ref对象，则直接返回该ref对象。

            判断是否需要获取原始数据，就是响应式对象的原始数据。
            判断是否需要进行转换成reactive数据，如果参数为引用类型，则将数据转换成reactive数据。

            当访问时value时，会触发trackRefValue函数进行收集作用域，收集后等待后续重渲染。
  
            当修改数据时，会判断是否是浅层响应式或者是数据是只读的。如果是则不更改数据，如果不是则获取原始数据。
            然后判断 新旧数据 是否相同，相同则结束。
            如果 新旧数据 不相同，则会判断新数据是否是引用类型，如果是就将其转换成reactive数据。然后在赋值给存储的旧数据。
            最后调用 triggerRefValue函数进行驱动更新重渲染。


         
          reactive函数
            首先会判断数据是否是只读的，如果是则直接返回。
            会判断数据是否是原始类型，如果是原始类型则直接返回并且报出警告。
            判断数据是否是 reactive、readonly 如果是则直接返回。
            判断webMap数据中是否有该数据，如果有，则直接返回。
            判断数据类型是否有效，如果没效，则直接返回该数据。
            通过Proxy创建代理对象：
                
               





            
            







*/